<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>CatSprite</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time = 0;
gravity = .55;
_lockoutTimer = 0;
_xDisplacement = 0;
dodgeSuccess = false;
previousX = x;
previousY = y;

image_xscale = .4;
image_yscale = .4;

image_speed = 0;
image_index = 0;

state = CatState.sitting;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time += 1;

switch(state){

case CatState.sitting:
    y = global.GROUND_Y;
    break;

case CatState.jumping:
    if (y &gt; global.GROUND_Y){
        y = global.GROUND_Y;
        vspeed = 0;
        hspeed = 0;

        if (_lockoutTimer &gt; 0){
            state = CatState.cooldown;
        }
        else {
            state = CatState.sitting;
            TweenPlay(TweenSimpleScale(1, 2, 60, EaseOutElastic));
        }
    }
    break;

case CatState.cooldown:
    _lockoutTimer -= 1;
    y = global.GROUND_Y;
    if (_lockoutTimer &lt;= 0){
        state = CatState.sitting;
    }
    break;

case CatState.shocked:

    if (time &gt; 3*60){
        state = CatState.dead;

    }
    _xDisplacement = random_range(-3,3);
    y = global.GROUND_Y;
    break;

case CatState.dead:
    y = global.GROUND_Y;
    vspeed = 0;
    hspeed = 0;

    break;

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
switch(state){

case CatState.sitting:
    state = CatState.jumping;
    previousX = x;
    previousY = y;
        
    _lockoutTimer = global.JUMP_LOCKOUT;

    audio_play_sound(CatDodgeSuccess, 2, false);

    vspeed = random_range(-5, -10);

    if (x &lt;= global.SCREEN_WIDTH/2){
        hspeed = random_range(7.5, 12.5);
        if (image_xscale &gt; 0){
            image_xscale = -image_xscale;
        }
    
    }
    else {
        hspeed = random_range(-7.5, -12.5);
        if (image_xscale &lt; 0){
            image_xscale = -image_xscale;
        }
    }


    y = global.GROUND_Y;

    if (LightningController.inBetweenFlashAndStrike = true){   
        show_debug_message("success");
        dodgeSuccess = true;
    }
    else {
        show_debug_message("fail");
    }
    break;

case CatState.jumping:
    break;

case CatState.cooldown:
    break;

case CatState.shocked:
    break;

case CatState.dead:
    break;

}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var xscale = image_xscale;
var yscale = image_yscale;

draw_sprite_ext(CatSprite, state, x + _xDisplacement, y, xscale, yscale, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
