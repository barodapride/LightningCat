<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MINIMUM_TIME_BETWEEN_STRIKES = 5*60;
MAXIMUM_TIME_BETWEEN_STRIKES = 15*60;

timeBetweenFlashAndStrike = 1.5*60;

inBetweenFlashAndStrike = false;



time = 0;
nextStrike = random_range(MINIMUM_TIME_BETWEEN_STRIKES, MAXIMUM_TIME_BETWEEN_STRIKES);
nextFlash = nextStrike - timeBetweenFlashAndStrike;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time += 1;

if (time &gt;= nextFlash){
    show_debug_message("lightning flash");
    audio_play_sound(Cue_1, 1, false);    
    instance_create(0, 0, WhiteFlash);
    inBetweenFlashAndStrike = true;
    nextFlash = nextStrike + 1;
//    audio_play_sound(Cue_1, 1, false);
    
        

}

if (time &gt;= nextStrike){

    show_debug_message("lightning strike");

    inBetweenFlashAndStrike = false;
    time = 0;
    nextStrike = random_range(MINIMUM_TIME_BETWEEN_STRIKES, MAXIMUM_TIME_BETWEEN_STRIKES);
    nextFlash = nextStrike - timeBetweenFlashAndStrike;
    timeBetweenFlashAndStrike *= .9;
    show_debug_message("time between flash and strike is now " + string(timeBetweenFlashAndStrike));
    audio_play_sound(lightning_strike, 1, false);
    
//    if (audio_is_playing(Cue_1)){
//        audio_stop_sound(Cue_1);
//    
//    }
    
    //if (!audio_is_playing(MainTrack)){
    //    audio_resume_sound(MainTrack);
    
    //}
    
    if (CatObject.dodgeSuccess == true){
        var prevX = CatObject.previousX;
        var prevY = CatObject.previousY;
        effect_create_above(ef_spark, prevX, prevY, 3, c_white);
        instance_create(CatObject.previousX, CatObject.previousY, BoltObject);
        score++;
    }
    else {
        CatObject.state = CatState.shocked;
        CatObject.time = 0;
        audio_stop_sound(MainTrack);
        audio_play_sound(CatStruckWithCue, 2, false);
        instance_create(CatObject.x, CatObject.y, BoltObject);
        instance_create(0, 0, GameOverObject);
        instance_destroy();
        global.gameState = GameState.gameover
        
    }
    CatObject.dodgeSuccess = false;


}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
